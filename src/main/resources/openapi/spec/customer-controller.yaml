openapi: 3.0.0

info:
  title: 'Customer Controller'
  description: 'Customer Controller API'
  version: 1.0.0
  contact:
    name: Andrii Kybenko
    url: https://www.linkedin.com/in/andrii-kybenko/

tags:
  - name: customer-controller
    description: Model Customer API

servers:
  - url: http://localhost:8080
    description: 'localhost'

paths:
  /api/v1/customer:
    post:
      tags:
        - customer-controller
      summary: 'creates a customer'
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'customer-entities.yaml#/components/schemas/CustomerDto'
        required: true
        description: 'customer dto'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: 'customer-entities.yaml#/components/schemas/CustomerDto'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'

  /api/v1/customer/{uuid}:
    get:
      tags:
        - customer-controller
      summary: 'finds a customer by id'
      operationId: findById
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
            format: uuid
            description: 'customer id'
          required: true
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: 'customer-entities.yaml#/components/schemas/CustomerDto'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Entity not found'
          content:
            application/json:
              schema:
                $ref: 'error-entities.yaml#/components/schemas/SingleErrorResponse'
    delete:
      tags:
        - customer-controller
      summary: 'deletes a customer by id'
      operationId: deleteById
      parameters:
        - name: uuid
          in: path
          schema:
            type: string
            format: uuid
            description: 'customer id'
          required: true
      responses:
        '204':
          description: No content
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Entity not found'

